<Project>
  <!-- Override targets that might try to generate MSIX content -->
  <Target Name="GenerateAppManifestFromAppx" />
  <Target Name="_GenerateAppxManifest" />
  <Target Name="_GeneratePriConfigXml" />
  <Target Name="_GenerateProjectPriFile" />
  <Target Name="ExtractMicrosoftWindowsAppSDKMsixFiles" />
  <Target Name="CreateWinRTRegistration" />
  <Target Name="GetNewAppManifestValues" />
  
  <!-- Skip MSIX packaging tasks -->
  <Target Name="_CreateAppxPackage" />
  <Target Name="CreateAppxPackage" />
  <Target Name="_GenerateAppxBundleFile" />
  <Target Name="WindowsAppSDKSelfContainedVerifyConfiguration" />
  
  <!-- Override targets that might cause excessive file copying -->
  <Target Name="_CopyFilesToOutputDirectory" DependsOnTargets="_PrepareForBuild">
    <ItemGroup>
      <!-- Only copy essential files, exclude broad wildcards -->
      <_FilesToCopy Include="@(Content)" Condition="'%(Content.CopyToOutputDirectory)' != '' AND '%(Content.CopyToOutputDirectory)' != 'Never'" />
      <_FilesToCopy Include="@(None)" Condition="'%(None.CopyToOutputDirectory)' != '' AND '%(None.CopyToOutputDirectory)' != 'Never'" />
      <!-- Exclude system and unwanted directories -->
      <_FilesToCopy Remove="@(_FilesToCopy)" Condition="$([System.String]::Copy('%(Identity)').Contains('System Volume Information'))" />
      <_FilesToCopy Remove="@(_FilesToCopy)" Condition="$([System.String]::Copy('%(Identity)').Contains('$Recycle.Bin'))" />
      <_FilesToCopy Remove="@(_FilesToCopy)" Condition="$([System.String]::Copy('%(Identity)').Contains('.git\'))" />
      <_FilesToCopy Remove="@(_FilesToCopy)" Condition="$([System.String]::Copy('%(Identity)').Contains('node_modules\'))" />
      <_FilesToCopy Remove="@(_FilesToCopy)" Condition="$([System.String]::Copy('%(Identity)').Contains('packages\'))" />
    </ItemGroup>
    
    <Copy SourceFiles="@(_FilesToCopy)" DestinationFiles="@(_FilesToCopy->'$(OutputPath)%(RelativeDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true" />
  </Target>
  
  <!-- Disable manifest generation -->
  <PropertyGroup>
    <GenerateManifest>false</GenerateManifest>
    <EmbedManifest>false</EmbedManifest>
  </PropertyGroup>
  
  <!-- Override content copying to be more selective -->
  <Target Name="_GetCopyToOutputDirectoryItems" Returns="@(AllItemsFullPathWithTargetPath)">
    <ItemGroup>
      <!-- Be very selective about what gets copied -->
      <_SourceItemsToCopyToOutputDirectory Include="@(Content)" Condition="'%(Content.CopyToOutputDirectory)'=='Always' or '%(Content.CopyToOutputDirectory)'=='PreserveNewest'" />
      <_SourceItemsToCopyToOutputDirectory Include="@(None)" Condition="'%(None.CopyToOutputDirectory)'=='Always' or '%(None.CopyToOutputDirectory)'=='PreserveNewest'" />
      
      <!-- Exclude broad patterns that might cause issues -->
      <_SourceItemsToCopyToOutputDirectory Remove="@(_SourceItemsToCopyToOutputDirectory)" Condition="$([System.String]::Copy('%(Identity)').StartsWith('$(MSBuildProjectDirectory)\..'))" />
      <_SourceItemsToCopyToOutputDirectory Remove="@(_SourceItemsToCopyToOutputDirectory)" Condition="$([System.String]::Copy('%(Identity)').Contains('\bin\'))" />
      <_SourceItemsToCopyToOutputDirectory Remove="@(_SourceItemsToCopyToOutputDirectory)" Condition="$([System.String]::Copy('%(Identity)').Contains('\obj\'))" />
    </ItemGroup>
    
    <ItemGroup>
      <AllItemsFullPathWithTargetPath Include="@(_SourceItemsToCopyToOutputDirectory->'%(FullPath)')">
        <TargetPath>%(Filename)%(Extension)</TargetPath>
      </AllItemsFullPathWithTargetPath>
    </ItemGroup>
  </Target>
</Project>